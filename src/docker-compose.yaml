version: "3.7"
services:
  
  kafka: 
    restart: unless-stopped
    image: "bitnami/kafka:latest"
    container_name: "kafka"
    ports:
      - "9092:9092"
   
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093 
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      # Options
      - KAFKA_HEAP_OPTS=-Xmx512M -Xms256M

 
  node:
    restart: unless-stopped
    image: "node:latest"
    ports:
      - "80:4000"
    environment: 
      - KAFKA_HOST=kafka:9092
      - PUBLIC_HOST=54.209.121.134

    volumes:
     - "./:/src"
     - "/src/node_modules"

    working_dir: "/src"
    command: "npm run start"
    depends_on:
      - kafka

  nginx:
    restart: unless-stopped
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - node

  certbot:
    restart: unless-stopped
    image: certbot/certbot:latest
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

  # producer:
  #   image: "node:latest"
  #   environment: 
  #     - KAFKA_HOST=kafka:9092
  #     - PUBLIC_HOST=54.209.121.134
  #   volumes:
  #     - "./:/src"
  #     - "/src/node_modules"
  #   working_dir: "/src"
  #   command: "npm run producer"
  #   depends_on:
  #     - kafka
  #     - node


