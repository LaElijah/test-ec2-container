
``` Skip to step 6 if instance is set up already ```
Step 1: move to sshKeys directory with: 
- cd sshKeys

Step 2: ssh into instance with:
-  ssh -i "<passkee-file-name>.pem" <username: ubuntu>@<instance-name>

Step 3: download the docker package with:
- # Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl gnupg
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg

# Add the repository to Apt sources:
echo \
  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

Step 4: install the docker software with:
- sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

Step 5: git clone this repository with:
- git clone 

Step 6: make an image with the dockerfile in test-ec2-container/src with: 
- sudo docker run build -t <username>/<service-name> .


``` Skip to step 11 if its your first run ```

Step 7: Update git project with: 
- git pull 

Step 8: get docker container id from:
- sudo docker ps

Step 9: shut down container with: 
- sudo docker stop <container-id>

Step 10: rebuild the docker container with:
- sudo docker run build -t <username>/<service-name> . 

Step 11: run the image in the background with: 
- sudo docker run -dp <public-ip>:80:3000 <username>/<service-name> 